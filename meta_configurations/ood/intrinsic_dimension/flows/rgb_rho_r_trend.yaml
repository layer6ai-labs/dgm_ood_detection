# This sweep compares the likelihood values of in and out of distribution
# for all the dataset pairs, containing the DGM generated ones
project: final-report
sweep_name: rgb_rho_r_trend
entity: platypus-dgm
count: 10000
method: grid

# Change the name of the run to [in_distribution_dataset]_vs_[out_of_distribution_dataset]_[run_name]
# using the dysweep name changer for better readability
run_name_changer:
  expression: |
    from meta_configurations import *
  function_of_interest: ood_run_name_changer

# BASE configuration which is being used
base_config:
  data:
    # specify the datasets and dataloader configurations for the in and out of distribution data.
    in_distribution:
      dataloader_args:
        make_valid_loader: false
      pick_loader: train
    out_of_distribution:
      dataloader_args:
        make_valid_loader: false
  ood:
    # bypass the entire visualization process since there is no need to plot the histograms that take time!
    bypass_visualization: True
    
    # for reproducibility
    seed: 100
    # the number of batches under consideration -> Makes a total of 1024 datapoints
    
    pick_count: 128
    
    # The OOD detection method in use
    method: ood.methods.intrinsic_dimension.RadiiTrend
    method_args:
      # Latent statistics calculator
      latent_statistics_calculator_class: ood.methods.intrinsic_dimension.GaussianConvolutionStatsCalculator
      latent_statistics_calculator_args:
        encoding_model_class: ood.methods.intrinsic_dimension.EncodingFlow
        encoding_model_args:
          use_functorch: True 
          use_forward_mode: True
          use_vmap: False
          chunk_size: 1
          verbose: 2
          # control whether the encoding model also handles the data transform
          diff_transform: False
        # verbosity
        verbose: 0
      
      # for logging args
      verbose: 2
      
      # The number of radii that are being plotted is always fixed
      radii_n: 120
      radii_range: [-20, 5]
      with_std: True
      
sweep_configuration:

  dy__upsert:
    - sweep: True
      sweep_identifier: B_in_distribution_model
      sweep_alias:
        # colorful flows
        - flow_cifar10_RQ_NSF
        - flow_svhn_RQ_NSF
        - flow_cifar100_RQ_NSF
        - flow_tiny_RQ_NSF
        - flow_celeba_small_RQ_NSF
      values:
        - base_model:
            config_dir: checkpoints-zei1ialy/PiecewiseRationalQuadraticCouplingTransform_cifar10_heteronomous_owjcfa1x_final/run_config.json
            checkpoint_dir: checkpoints-zei1ialy/PiecewiseRationalQuadraticCouplingTransform_cifar10_heteronomous_owjcfa1x_final/checkpoints/de_nf_best_valid.pt
          data:
            in_distribution:
              dataloader_args:
                dataset: cifar10
                train_batch_size: 8
                valid_batch_size: 8
                test_batch_size: 8
            out_of_distribution:
              dataloader_args:
                train_batch_size: 8
                valid_batch_size: 8
                test_batch_size: 8
        - base_model:
            config_dir: checkpoints-zei1ialy/PiecewiseRationalQuadraticCouplingTransform_svhn_hittitics_znujejsh_final/run_config.json
            checkpoint_dir: checkpoints-zei1ialy/PiecewiseRationalQuadraticCouplingTransform_svhn_hittitics_znujejsh_final/checkpoints/de_nf_best_valid.pt
          data:
            in_distribution:
              dataloader_args:
                dataset: svhn
                train_batch_size: 8
                valid_batch_size: 8
                test_batch_size: 8
            out_of_distribution:
              dataloader_args:
                train_batch_size: 8
                valid_batch_size: 8
                test_batch_size: 8
        - base_model:
            config_dir: checkpoints-zei1ialy/PiecewiseRationalQuadraticCouplingTransform_cifar100_unindigenous_42n5ww2b_final/run_config.json
            checkpoint_dir: checkpoints-zei1ialy/PiecewiseRationalQuadraticCouplingTransform_cifar100_unindigenous_42n5ww2b_final/checkpoints/de_nf_best_valid.pt
          data:
            in_distribution:
              dataloader_args:
                dataset: cifar100
                train_batch_size: 8
                valid_batch_size: 8
                test_batch_size: 8
            out_of_distribution:
              dataloader_args:
                train_batch_size: 8
                valid_batch_size: 8
                test_batch_size: 8
        - base_model:
            config_dir: checkpoints-zei1ialy/PiecewiseRationalQuadraticCouplingTransform_tiny-imagenet_directors_zk9ezaia_final/run_config.json
            checkpoint_dir: checkpoints-zei1ialy/PiecewiseRationalQuadraticCouplingTransform_tiny-imagenet_directors_zk9ezaia_final/checkpoints/de_nf_best_valid.pt
          data:
            in_distribution:
              dataloader_args:
                dataset: tiny-imagenet
                train_batch_size: 8
                valid_batch_size: 8
                test_batch_size: 8
            out_of_distribution:
              dataloader_args:
                train_batch_size: 8
                valid_batch_size: 8
                test_batch_size: 8
        
        - base_model:
            config_dir: checkpoints-zei1ialy/PiecewiseRationalQuadraticCouplingTransform_celeba-small_loculose_8fvoxku1_final/run_config.json
            checkpoint_dir: checkpoints-zei1ialy/PiecewiseRationalQuadraticCouplingTransform_celeba-small_loculose_8fvoxku1_final/checkpoints/de_nf_best_valid.pt
          data:
            in_distribution:
              dataloader_args:
                dataset: celeba-small
                train_batch_size: 8
                valid_batch_size: 8
                test_batch_size: 8
            out_of_distribution:
              dataloader_args:
                train_batch_size: 8
                valid_batch_size: 8
                test_batch_size: 8
  
        
    - sweep: True
      sweep_identifier: ood_picker
      sweep_alias:
      - generated
      - celeba-small
      - svhn
      - cifar10
      - tiny-imagenet
      - cifar100
      values:
      - data:
          out_of_distribution:
            dataloader_args:
              dy__eval:
                expression: |
                  from meta_configurations import get_generated_config

                  def pick_generated(conf):
                    return get_generated_config(conf)

                function_of_interest: pick_generated
      - data:
          out_of_distribution:
            dataloader_args:
              dataset: celeba-small
      - data:
          out_of_distribution:
            dataloader_args:
              dataset: svhn
      - data:
          out_of_distribution:
            dataloader_args:
              dataset: cifar10
      - data:
          out_of_distribution:
            dataloader_args:
              dataset: tiny-imagenet
      - data:
          out_of_distribution:
            dataloader_args:
              dataset: cifar100
    - data:
        out_of_distribution:
          pick_loader:
            sweep: True
            values: [train, test]